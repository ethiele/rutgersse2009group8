//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRySTALManager.CRySTALManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicEmployee", Namespace="http://schemas.datacontract.org/2004/07/CRySTAL")]
    [System.SerializableAttribute()]
    public partial class BasicEmployee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role {
            get {
                return this.roleField;
            }
            set {
                if ((object.ReferenceEquals(this.roleField, value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShiftData", Namespace="http://schemas.datacontract.org/2004/07/CRySTAL")]
    [System.SerializableAttribute()]
    public partial class ShiftData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HoursWorkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShiftIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HoursWorked {
            get {
                return this.HoursWorkedField;
            }
            set {
                if ((this.HoursWorkedField.Equals(value) != true)) {
                    this.HoursWorkedField = value;
                    this.RaisePropertyChanged("HoursWorked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShiftID {
            get {
                return this.ShiftIDField;
            }
            set {
                if ((this.ShiftIDField.Equals(value) != true)) {
                    this.ShiftIDField = value;
                    this.RaisePropertyChanged("ShiftID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeData", Namespace="http://schemas.datacontract.org/2004/07/CRySTAL")]
    [System.SerializableAttribute()]
    public partial class EmployeeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] rolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] roles {
            get {
                return this.rolesField;
            }
            set {
                if ((object.ReferenceEquals(this.rolesField, value) != true)) {
                    this.rolesField = value;
                    this.RaisePropertyChanged("roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/CRySTAL")]
    [System.SerializableAttribute()]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CRySTALManager.CRySTALManagerService.BillData BillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotPaiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TableNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid WorkflowInstIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((this.AssignedToField.Equals(value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CRySTALManager.CRySTALManagerService.BillData Bill {
            get {
                return this.BillField;
            }
            set {
                if ((object.ReferenceEquals(this.BillField, value) != true)) {
                    this.BillField = value;
                    this.RaisePropertyChanged("Bill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotPaied {
            get {
                return this.NotPaiedField;
            }
            set {
                if ((this.NotPaiedField.Equals(value) != true)) {
                    this.NotPaiedField = value;
                    this.RaisePropertyChanged("NotPaied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TableNumber {
            get {
                return this.TableNumberField;
            }
            set {
                if ((this.TableNumberField.Equals(value) != true)) {
                    this.TableNumberField = value;
                    this.RaisePropertyChanged("TableNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid WorkflowInstID {
            get {
                return this.WorkflowInstIDField;
            }
            set {
                if ((this.WorkflowInstIDField.Equals(value) != true)) {
                    this.WorkflowInstIDField = value;
                    this.RaisePropertyChanged("WorkflowInstID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillData", Namespace="http://schemas.datacontract.org/2004/07/CRySTAL")]
    [System.SerializableAttribute()]
    public partial class BillData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BillTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CRySTALManager.CRySTALManagerService.BillItem[] ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BillTotal {
            get {
                return this.BillTotalField;
            }
            set {
                if ((this.BillTotalField.Equals(value) != true)) {
                    this.BillTotalField = value;
                    this.RaisePropertyChanged("BillTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CRySTALManager.CRySTALManagerService.BillItem[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillItem", Namespace="http://schemas.datacontract.org/2004/07/CRySTAL")]
    [System.SerializableAttribute()]
    public partial class BillItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ItemPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ItemPrice {
            get {
                return this.ItemPriceField;
            }
            set {
                if ((this.ItemPriceField.Equals(value) != true)) {
                    this.ItemPriceField = value;
                    this.RaisePropertyChanged("ItemPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Person {
            get {
                return this.PersonField;
            }
            set {
                if ((this.PersonField.Equals(value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CRySTALManagerService.IManagerService")]
    public interface IManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetAllEmployeesOnDuty", ReplyAction="http://tempuri.org/IManagerService/GetAllEmployeesOnDutyResponse")]
        CRySTALManager.CRySTALManagerService.BasicEmployee[] GetAllEmployeesOnDuty(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetShiftsForEmployees", ReplyAction="http://tempuri.org/IManagerService/GetShiftsForEmployeesResponse")]
        CRySTALManager.CRySTALManagerService.ShiftData[] GetShiftsForEmployees(string sessionID, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/AddShift", ReplyAction="http://tempuri.org/IManagerService/AddShiftResponse")]
        void AddShift(string sessionID, int EmployeeID, string role, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RemoveShift", ReplyAction="http://tempuri.org/IManagerService/RemoveShiftResponse")]
        void RemoveShift(string sessionID, int shiftNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/EditShift", ReplyAction="http://tempuri.org/IManagerService/EditShiftResponse")]
        void EditShift(string sessionID, int shiftNumber, int EmployeeId, string role, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetAllEmployees", ReplyAction="http://tempuri.org/IManagerService/GetAllEmployeesResponse")]
        CRySTALManager.CRySTALManagerService.EmployeeData[] GetAllEmployees(string sessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/AddUser", ReplyAction="http://tempuri.org/IManagerService/AddUserResponse")]
        void AddUser(string sessionID, string username, string password, string firstname, string lastname, string[] roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ChangeUserPassword", ReplyAction="http://tempuri.org/IManagerService/ChangeUserPasswordResponse")]
        void ChangeUserPassword(string sessionID, int EmployeeID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RemoveUser", ReplyAction="http://tempuri.org/IManagerService/RemoveUserResponse")]
        void RemoveUser(string sessionID, int EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/AddUserToRole", ReplyAction="http://tempuri.org/IManagerService/AddUserToRoleResponse")]
        void AddUserToRole(string sessionID, int EmployeeID, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RemoveUserFromRole", ReplyAction="http://tempuri.org/IManagerService/RemoveUserFromRoleResponse")]
        void RemoveUserFromRole(string sessionID, int EmployeeID, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetTransactions", ReplyAction="http://tempuri.org/IManagerService/GetTransactionsResponse")]
        CRySTALManager.CRySTALManagerService.Transaction[] GetTransactions(string sessionID, System.DateTime startTime, System.DateTime endTime);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IManagerServiceChannel : CRySTALManager.CRySTALManagerService.IManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ManagerServiceClient : System.ServiceModel.ClientBase<CRySTALManager.CRySTALManagerService.IManagerService>, CRySTALManager.CRySTALManagerService.IManagerService {
        
        public ManagerServiceClient() {
        }
        
        public ManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CRySTALManager.CRySTALManagerService.BasicEmployee[] GetAllEmployeesOnDuty(string sessionID) {
            return base.Channel.GetAllEmployeesOnDuty(sessionID);
        }
        
        public CRySTALManager.CRySTALManagerService.ShiftData[] GetShiftsForEmployees(string sessionID, System.DateTime start, System.DateTime end) {
            return base.Channel.GetShiftsForEmployees(sessionID, start, end);
        }
        
        public void AddShift(string sessionID, int EmployeeID, string role, System.DateTime start, System.DateTime end) {
            base.Channel.AddShift(sessionID, EmployeeID, role, start, end);
        }
        
        public void RemoveShift(string sessionID, int shiftNumber) {
            base.Channel.RemoveShift(sessionID, shiftNumber);
        }
        
        public void EditShift(string sessionID, int shiftNumber, int EmployeeId, string role, System.DateTime start, System.DateTime end) {
            base.Channel.EditShift(sessionID, shiftNumber, EmployeeId, role, start, end);
        }
        
        public CRySTALManager.CRySTALManagerService.EmployeeData[] GetAllEmployees(string sessionID) {
            return base.Channel.GetAllEmployees(sessionID);
        }
        
        public void AddUser(string sessionID, string username, string password, string firstname, string lastname, string[] roles) {
            base.Channel.AddUser(sessionID, username, password, firstname, lastname, roles);
        }
        
        public void ChangeUserPassword(string sessionID, int EmployeeID, string password) {
            base.Channel.ChangeUserPassword(sessionID, EmployeeID, password);
        }
        
        public void RemoveUser(string sessionID, int EmployeeID) {
            base.Channel.RemoveUser(sessionID, EmployeeID);
        }
        
        public void AddUserToRole(string sessionID, int EmployeeID, string role) {
            base.Channel.AddUserToRole(sessionID, EmployeeID, role);
        }
        
        public void RemoveUserFromRole(string sessionID, int EmployeeID, string role) {
            base.Channel.RemoveUserFromRole(sessionID, EmployeeID, role);
        }
        
        public CRySTALManager.CRySTALManagerService.Transaction[] GetTransactions(string sessionID, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.GetTransactions(sessionID, startTime, endTime);
        }
    }
}
